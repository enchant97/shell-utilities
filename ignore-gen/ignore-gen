#!/usr/bin/env bash
set -euo pipefail

# scripts constants
CONFIG_PATH=~/.config/shell-utilites/ignore-genrc
SCRIPT_VERSION=0.0.0

# default config variables
data_path=~/.local/share/shell-utilites/ignore-gen/
ignore_repo_remote=https://github.com/github/gitignore.git
ignore_repo_local="${data_path}/repos/gitignore"

init_config() {
    # create config file
    mkdir -p ~/.config/shell-utilites
    cat > "$CONFIG_PATH" <<EOL
ignore_repo_remote=${ignore_repo_remote}
ignore_repo_local=${ignore_repo_local}
EOL
}

init_local_repo() {
    # clone remote repo to local
    if [ ! -d "${ignore_repo_local}/.git" ] ; then
        git clone "$ignore_repo_remote" "$ignore_repo_local"
    fi
}

load_config() {
    # load/create config file
    if [ -f "$CONFIG_PATH" ] ; then
        . "$CONFIG_PATH"
    else
        echo "config was not found at: $CONFIG_PATH"
    fi
}

arg1=${1-init}

if [ $arg1 == "init" ] ; then
    init_config
    init_local_repo
    exit 0
elif [ $arg1 == "help" ] ; then
    echo -e "Usage:\n"
    echo -e "init \t create config file and get ignore files"
    echo -e "update \t update the gitignore repo"
    echo -e "ls \t list all possible ignore files"
    echo -e "cp \t copy a ignore file to a path"
    echo -e "clean \t clean the config and data directory"
    exit 0
fi

load_config

if [ $arg1 == "update" ] ; then
    git --git-dir="${ignore_repo_local}/.git" --work-tree="$ignore_repo_local" pull
elif [ $arg1 == "ls" ] ; then
    find $ignore_repo_local -type f -name "*.gitignore" -exec basename \{\} .gitignore \;
elif [ $arg1 == "cp" ] ; then
    ignore_name=$2
    cp_to=${3-.}
    ignore_path=$(find $ignore_repo_local -type f -name "${ignore_name}.gitignore")
    cp $ignore_path "${cp_to}/.gitignore"
elif [ $arg1 == "clean" ] ; then
    rm $CONFIG_PATH
    rm -rf $ignore_repo_local
    rm -r $data_path
else
    echo "unknown argument $arg1, use '$0 help' to get help."
    exit 1
fi
